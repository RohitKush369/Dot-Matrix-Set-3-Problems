//Display Numbers 0 to 4 one by one in one second Interval
void setup() {
  volatile char *dirf, *dirk;
  dirf = 0x30;
  *dirf = 0xFF;
  dirk = 0x107;
  *dirk = 0xFF;
}
void loop() {
  volatile char *outf, *outk;
  outf = 0x31;
  outk = 0x108;
  volatile long i;
  while (1) {

    *outk = 0xBF;
    *outf = 0x1C;
    for (i = 0; i < 5000; i++);
    *outk = 0xDF;
    *outf = 0x22;
    for (i = 0; i < 5000; i++);
    *outk = 0xFE;
    *outf = 0x22;
    for (i = 0; i < 5000; i++);
    *outk = 0xF7;
    *outf = 0x22;
    for (i = 0; i < 5000; i++);
    *outk = 0xFB;
    *outf = 0x22;
    for (i = 0; i < 5000; i++);
    *outk = 0xFD;
    *outf = 0x22;
    for (i = 0; i < 5000; i++);
    *outk = 0xFE;
    *outf = 0x1C;
    for (i = 0; i < 5000; i++);
    *outk = 0x00;
    *outf = 0x00;
    for (i = 0; i < 700000; i++);
    *outk = 0x7F;
    *outf = 0x08;
    for (i = 0; i < 5000; i++);
    *outk = 0xBF;
    *outf = 0x18;
    for (i = 0; i < 5000; i++);
    *outk = 0xDF;
    *outf = 0x28;
    for (i = 0; i < 5000; i++);
    *outk = 0xEF;
    *outf = 0x08;
    for (i = 0; i < 5000; i++);
    *outk = 0xF7;
    *outf = 0x08;
    for (i = 0; i < 5000; i++);
    *outk = 0xFB;
    *outf = 0x08;
    for (i = 0; i < 5000; i++);
    *outk = 0xFD;
    *outf = 0x08;
    for (i = 0; i < 5000; i++);
    *outk = 0xFE;
    *outf = 0x3E;
    for (i = 0; i < 5000; i++);
    *outk = 0x00;
    *outf = 0x00;
    for (i = 0; i < 700000; i++);

    *outk = 0xBF;
    *outf = 0x38;
    for (i = 0; i < 5000; i++);
    *outk = 0xDF;
    *outf = 0x44;
    for (i = 0; i < 5000; i++);
    *outk = 0xEF;
    *outf = 0x04;
    for (i = 0; i < 5000; i++);
    *outk = 0xF7;
    *outf = 0x08;
    for (i = 0; i < 5000; i++);
    *outk = 0xFB;
    *outf = 0x10;
    for (i = 0; i < 5000; i++);
    *outk = 0xFD;
    *outf = 0x20;
    for (i = 0; i < 5000; i++);
    *outk = 0xFE;
    *outf = 0x7C;
    for (i = 0; i < 5000; i++);
    *outk = 0x00;
    *outf = 0x00;
    for (i = 0; i < 700000; i++);
    *outk = 0x7F;
    *outf = 0x38;
    for (i = 0; i < 5000; i++);
    *outk = 0xBF;
    *outf = 0x44;
    for (i = 0; i < 5000; i++);
    *outk = 0xDF;
    *outf = 0x04;
    for (i = 0; i < 5000; i++);
    *outk = 0xEF;
    *outf = 0x18;
    for (i = 0; i < 5000; i++);
    *outk = 0xF7;
    *outf = 0x04;
    for (i = 0; i < 5000; i++);
    *outk = 0xFB;
    *outf = 0x44;
    for (i = 0; i < 5000; i++);
    *outk = 0xFD;
    *outf = 0x38;
    for (i = 0; i < 5000; i++);
    *outk = 0x00;
    *outf = 0x00;
    for (i = 0; i < 700000; i++);
    *outk = 0x7F;
    *outf = 0x04;
    for (i = 0; i < 5000; i++);
    *outk = 0xBF;
    *outf = 0x0C;
    for (i = 0; i < 5000; i++);
    *outk = 0xDF;
    *outf = 0x34;
    for (i = 0; i < 5000; i++);
    *outk = 0xEF;
    *outf = 0x24;
    for (i = 0; i < 5000; i++);
    *outk = 0xF7;
    *outf = 0x7F;
    for (i = 0; i < 5000; i++);
    *outk = 0xFB;
    *outf = 0x04;
    for (i = 0; i < 5000; i++);
    *outk = 0xFD;
    *outf = 0x04;
    for (i = 0; i < 5000; i++);
    *outk = 0xFE;
    *outf = 0x04;
    for (i = 0; i < 5000; i++);
    *outk = 0x00;
    *outf = 0x00;
    for (i = 0; i < 700000; i++);
  }
}

